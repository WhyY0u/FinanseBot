let { getHalyk, getKaspi, getSimply } = require('./balans');
const { getBal, getHistory } = require('./balans');

const checkText = () => {
    return "üí∏ –í –∫–∞–∫–æ–π –≤–∞–ª—é—Ç–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —Å—á–µ—Ç–∞? üí∞"
}
const banksText = () => {
  return "üè¶ –í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫ –¥–ª—è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ / –°–Ω—è—Ç–∏–µ"
}

const startText = (firstName) => {
   return `
  –ü—Ä–∏–≤–µ—Ç, *${firstName}*! üëã
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Bot Finance* üí∞
  
–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏. –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å
  `;
}
const getBalValuteText = async (callback_data, prefix) => {
  const kasp = await getBal(getKaspi(), "KZT", callback_data);
  const haly = await getBal(getHalyk(), "KZT", callback_data);
  const simpl = await getBal(getSimply(), "KZT", callback_data);
  let total = parseFloat(simpl) + parseFloat(kasp) + parseFloat(haly);
  return `*–í–∞—à–∏ —Å—á–µ—Ç–∞ –≤ –±–∞–Ω–∫–∞—Ö:*
üîπ *Kaspi*: ${kasp}${prefix}
üîπ *Halyk*: ${haly}${prefix}
üîπ *Simply*: ${simpl}${prefix}
üîπ *–û–±—â–∞—è*: ${total.toFixed(callback_data  == "BTC" ? 8 : 2)}${prefix}

  `
}


const getHistoryText = () => {
  return `üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–µ–π—Å—Ç–≤–∏–π
  ${getHistory()}
  `
}


const addBalValuteText = () => {
  return "üí∏ –ß—Ç–æ–±—ã **—Å–ø–∏—Å–∞—Ç—å** —Å—É–º–º—É, –≤–≤–µ–¥–∏—Ç–µ **-1000**\nüí∞ –ß—Ç–æ–±—ã **–¥–æ–±–∞–≤–∏—Ç—å** —Å—É–º–º—É, –≤–≤–µ–¥–∏—Ç–µ **+1000**."
}
module.exports = { checkText, banksText, startText, getBalValuteText, addBalValuteText, getHistoryText};